{"version":3,"sources":["data/salaries.csv","components/slider/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Slider","props","min","max","step","variable","updateChart","ref","useRef","useState","selectedValue","setSelectedValue","useEffect","margin","data","d3","map","d","key","value","console","log","svg","current","append","attr","xBand","domain","range","padding","xLinear","bandwidth","y","nice","bars","selectAll","barsEnter","enter","call","g","tickValues","tickFormat","select","remove","d3Slider","ticks","default","on","draw","selected","merge","Fragment","id","App","loading","setLoading","salaryMean","setSalaryMean","numberOfPeople","setNumberOfPeople","salaryData","setSalaryData","React","exchangeRate","experience","filters","setFilters","name","prevState","salaryFile","then","csv","Number","replace","catch","error","newSalaryData","filter","length","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.d465b76d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/salaries.b3e58a6f.csv\";","import React, { useState,useEffect, useRef }  from 'react';\nimport * as d3 from 'd3';\nimport * as d3Slider from 'd3-simple-slider';\n\n\n\nconst Slider = props => {\n\n    const {min,max,step,variable,updateChart} = props;\n\n    const ref = useRef(null);\n    const [selectedValue, setSelectedValue] = useState(min);\n\n\n    useEffect(\n        () => {\n\n                // New York Times\n                const width = 565;\n                const height = 120;\n                const margin = { top: 20, right: 50, bottom: 50, left: 40 };\n                \n                const data = d3.range(min, max+1).map(d => ({\n                    key: d,\n                    value: d,\n                }));\n                console.log(\"data\",data)\n\n                const svg = d3.select(ref.current)\n                    .append('svg')\n                    .attr('width', width)\n                    .attr('height', height);\n\n                const padding = 0.1;\n\n                const xBand = d3\n                    .scaleBand()\n                    .domain(data.map(d => d.key))\n                    .range([margin.left, width - margin.right])\n                    .padding(padding);\n\n                const xLinear = d3\n                    .scaleLinear()\n                    .domain([\n                        d3.min(data, d => d.key),\n                        d3.max(data, d => d.key),\n                    ])\n                    .range([\n                        margin.left + xBand.bandwidth() / 2 + xBand.step() * padding - 0.5,\n                        width -\n                        margin.right -\n                        xBand.bandwidth() / 2 -\n                        xBand.step() * padding -\n                        0.5,\n                    ]);\n\n                const y = d3\n                    .scaleLinear()\n                    .domain([0, d3.max(data, d => d.value)])\n                    .nice()\n                    .range([height - margin.bottom, margin.top]);\n\n                const yAxis = g =>g.attr('transform', `translate(${width - margin.right},0)`)\n                            .call(d3.axisRight(y)\n                                .tickValues([1e4])\n                                .tickFormat(d3.format('($.2s'))\n                            )\n                            .call(g => g.select('.domain').remove());\n\n                const slider = g =>\n                g.attr('transform', `translate(0,${height - margin.bottom})`).call(\n                    d3Slider\n                    .sliderBottom(xLinear)\n                    .step(step)\n                    .ticks(4)\n                    .default(min)\n                    .on('onchange', value => draw(value))\n                );\n\n                const bars = svg\n                    .append('g')\n                    .selectAll('rect')\n                    .data(data);\n\n                const barsEnter = bars\n                    .enter()\n                    .append('rect')\n                    .attr('x', d => xBand(d.key))\n                    .attr('y', d => y(d.value))\n                    .attr('height', d => y(0) - y(d.value))\n                    .attr('width', xBand.bandwidth());\n\n                svg.append('g').call(yAxis);\n                svg.append('g').call(slider);\n\n                const draw = selected => {\n                    barsEnter\n                        .merge(bars)\n                        .attr('fill', d => (d.key === selected ? '#bad80a' : '#e0e0e0'));\n\n                    setSelectedValue(selected)\n                 \n                    updateChart(variable,selected);\n\n                };\n                draw(min);\n        },\n        []\n    );\n\n    return (\n        <React.Fragment>\n        <p>{selectedValue}</p>\n        <div id=\"slider-new-york-times\" ref={ref}></div>\n\n        </React.Fragment>\n\n    )\n\n}\n\nexport default Slider;","import React,{useState,useEffect} from 'react';\nimport Slider from './components/slider';\nimport * as d3 from 'd3';\nimport './App.css';\nimport salaryFile from './data/salaries.csv'\n//let salaryData=null;\n\n\nconst maxSalary=1000000000\n\n\nfunction App() {\n\n  const [loading, setLoading] = useState(true);\n  const [salaryMean, setSalaryMean] = useState(0);\n  const [numberOfPeople, setNumberOfPeople] = useState(0);\n  const [salaryData, setSalaryData] = useState(null);\n  const [filters, setFilters] = React.useState({\n    exchangeRate: 3000,\n    experience:0,\n  });\n  const processData=()=>{\n    console.log(\"salarie\")\n    d3.csv(salaryFile)\n    .then((csv)=>{\n      csv.map(d=>{\n        d[\"income-in-currency\"]=Number(d[\"income-in-currency\"].replace(/[^0-9.-]+/g,\"\"))\n        switch(d[\"experience\"]) {\n          case \"menos de 1 año\":\n            d['min-experience']=0;\n            d['max-experience']=0;\n            break;\n          case \"1+ año\":\n            d['min-experience']=1;\n            d['max-experience']=1;\n            break;\n          case \"2+ años\":\n            d['min-experience']=2;\n            d['max-experience']=2;\n            break;\n          case \"3 - 5 años\":\n            d['min-experience']=3;\n            d['max-experience']=4;\n            break;\n          case \"5 - 10 años\":\n            d['min-experience']=5;\n            d['max-experience']=9;\n            break; \n          case \"10 - 15 años\":\n            d['min-experience']=10;\n            d['max-experience']=14;\n            break;      \n          default:\n            d['min-experience']=15;\n            d['max-experience']=20;\n        }\n\n        ;return d;})\n      setSalaryData(csv);\n      console.log(\"loading\",loading)\n      setLoading(false);\n\n    })\n    .catch((error)=>{\n       // handle error   \n    })\n  }\n\n\n  const updateChart=(name,value)=>{\n    setFilters(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  }\n\n  useEffect(\n    () => {\n      processData(setSalaryData,setLoading)\n           \n    },\n    []\n  );\n\n  useEffect(\n    () => {\n      if(salaryData){\n        console.log(\"state\",filters)\n        let newSalaryData=salaryData.map(d=>{\n            d[\"income-cop\"]=d[\"currency\"]===\"pesos\"?d[\"income-in-currency\"]:d[\"income-in-currency\"]*filters.exchangeRate;\n            return d;\n          })\n          console.log(\"state\",newSalaryData)\n\n        newSalaryData=newSalaryData.filter(d=>d[\"income-cop\"]<=maxSalary)\n        console.log(\"salaryDataupda2\",newSalaryData)\n\n        newSalaryData=newSalaryData.filter(d=>(filters.experience>=d[\"min-experience\"] && filters.experience<=d[\"max-experience\"]));\n\n        console.log(\"salaryDataupda\",newSalaryData)\n        setSalaryMean(d3.mean(newSalaryData, d => d[\"income-cop\"]))\n        setNumberOfPeople(newSalaryData.length);\n      }\n          \n    },\n    [filters]\n  );\n\n  return (\n    <div className=\"App\">\n\n      {!loading && \n      <React.Fragment>\n        <h4>¿Qué tasa de conversión de dólar deseas utilizar?</h4>\n      <Slider variable=\"exchangeRate\" updateChart={updateChart} min={3000} max={4000} step={10} />\n      <h4>¿Cuántos años de experiencia tienes?</h4>\n      <Slider variable=\"experience\" updateChart={updateChart}  min={0} max={15} step={1} />\n      <h4>Hay {numberOfPeople} personas de la comunidad con un perfil parecido al tuyo y ganan en promedio</h4>\n      el equivalente a {d3.format(\"($,.0f\")(salaryMean)} pesos al año\n      </React.Fragment>\n       \n      }\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}